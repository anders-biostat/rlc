% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lc.R
\name{lc_input}
\alias{lc_input}
\title{Add input forms to the page}
\usage{
lc_input(data = list(), place = NULL, ..., chartId = NULL, with = NULL)
}
\arguments{
\item{data}{Name-value pairs of properties passed through the \code{\link{dat}} function. These
properties will be re-evaluated on each \code{\link{updateCharts}} call.}

\item{place}{An ID of the container, where to place new chart. It will be ignored if the chart already
exists. If not defined, the chart will be appended to the web page's body.}

\item{...}{Name-value pairs of properties that will be evaluated only once and then will remain
constant. These properties can still be changed later using the \code{\link{setProperties}} function.}

\item{chartId}{An ID for the chart. All charts must have unique IDs. If a chart with the same ID already
exists, it will be replaced. If ID is not defined, it will be the same as the
value of the \code{place} argument. And if both are not defined, the ID will be set to \code{ChartN},
where \code{N - 1} is the number of existing charts.}

\item{with}{A dataset or a list from which other properties should be taken. If the dataset doesn't have a
column with the requested name, the variable will be searched for outside of the dataset. Must be
a \code{data.frame} or a \code{list}.}
}
\description{
\code{lc_input} adds an input form. This function is an rlc wrapper for an
HTML \code{<input>} tag. Five types of input are supported: \code{"text"}, \code{"range"},
\code{"checkbox"}, \code{"radio"} and \code{"button"}.
}
\section{Available properties}{

You can read more about different properties
\href{https://anders-biostat.github.io/linked-charts/rlc/tutorials/props.html}{here}.

\itemize{
\item \code{type} - type of input. Must be one of \code{"text"}, \code{"range"}, \code{"checkbox"},
\code{"radio"} or \code{"button"}.
\item \code{value} - current state of the input block. For radio buttons it is an index of the checked
button. For checkboxes - a vector of \code{TRUE} (for each checked box) and \code{FALSE} (for each unchecked ones),
for ranges and text boxes - a vector of values for each text field or slider.
\item \code{step} (only for \code{type = "range"}) - stepping interval for values that can be selected with the slider.
Must be a numeric vector with one value for each slider in the input block.
\item \code{min, max} (only for \code{type = "range"}) - minimal and maximal values that can be selected with the slider.
Must be a numeric vector with one value for each slider in the input block.
\item \code{fontSize} - changes font size of the labels. The default size is 17.
\item \code{nrows} - number of rows in the table of input elements. By default is defined by the number of elements.
\item \code{ncols} - number of columns of input elements. The default value is 1.
}

Interactivity settings
\itemize{
\item \code{on_click, on_change} - a function, to be called when user clicks on a button, enters text in a text field
or moves a slider. The two properties are complete synonyms and can replace one another.
}

Global chart settings
\itemize{
\item \code{title} - title of the input block.
\item \code{width} - width of the chart in pixels. By default, width will be set to fit the content.
If width is defined and it's smaller than content's width, scrolling will be possible.
\item \code{heigth} - height of the chart in pixels. By default, height will be set to fit the content.
If height is defined and it's smaller than content's height, scrolling will be possible.
\item \code{paddings} - padding sizes in pixels. Must be a list with all the following fields:
\code{"top", "bottom", "left", "right"}.}
}

\examples{
\dontrun{lc_input(type = "checkbox", labels = paste0("el", 1:5), on_click = function(value) print(value),
value = TRUE)
lc_input(type = "radio", labels = paste0("el", 1:5), on_click = function(value) print(value),
         value = 1)
lc_input(type = "text", labels = paste0("el", 1:5), on_click = function(value) print(value),
         value = c("a", "b", "c", "e", "d"))
lc_input(type = "range", labels = paste0("el", 1:5), on_click = function(value) print(value),
         value = 10, max = c(10, 20, 30, 40, 50), step = c(0.5, 0.1, 1, 5, 25))
lc_input(type = "button", labels = paste0("el", 1:5), on_click = function(value) print(value))}

}
